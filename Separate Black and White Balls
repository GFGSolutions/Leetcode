// User Template For Java

class Solution {
  public long minimumSteps(String s) {
    long ans = 0;
    int blackCount = 0; 
    for (int i = 0; i < s.length(); i++) {
      if (s.charAt(i) == '0') {
        ans += blackCount;
      } else {
        blackCount++;
      }
    }
    return ans;
  }
}





// User Template For C++
class Solution {
public:
    long long minimumSteps(string s) {
        int n = s.length();
        long long ans = 0;
        int cnt = 0; // Tracks the number of black balls (1s)

        // Traverse through the string
        for (int i = 0; i < n; i++) {
            if (s[i] == '0') {
                // White ball encountered, add the number of black balls on its left
                ans += cnt;
            } else {
                // Black ball encountered, increment the black ball count
                cnt++;
            }
        }
        return ans;
    }
};





// User Template For Python
class Solution:
    def minimumSteps(self, s: str) -> int:
        ans = 0
        blackCount = 0 # Tracks the number of black balls (1s)

        # Traverse through the string
        for ch in s:
            if ch == '0':
                # White ball encountered, add the number of black balls on its left
                ans += blackCount
            else:
                # Black ball encountered, increment the black ball count
                blackCount += 1

        return ans
